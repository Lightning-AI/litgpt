name: CPU tests

on:
  push:
    branches: [main, wip]
  pull_request:
    branches: [main, wip]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

defaults:
  run:
    shell: bash

env:
  HF_TOKEN: ${{ secrets.HF_TOKEN }}

jobs:
  pytester:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-22.04"]
        python-version: ["3.9", "3.10", "3.11"]
        include:
          - {os: "macOS-14", python-version: "3.10"}
          - {os: "windows-2022", python-version: "3.10"}
    timeout-minutes: 25

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          pyproject.toml

    - name: Install minimal dependencies
      run: |
        # python -m pip install --upgrade pip
        pip install . -e
        pip list

    - name: testing imports
      # make sure all modules are still importable with only the minimal dependencies available
      run: |
        modules=$(
          find litgpt -type f -name "*.py" | \
          sed 's/\.py$//' | sed 's/\//./g' | \
          sed 's/.__init__//g' | xargs -I {} echo "import {};"
        )
        echo "$modules"
        python -c "$modules"

    - name: Install all dependencies
      run: |
        pip install '.[all,test]' -e
        pip list

    - name: Run tests
      run: |
        pytest -v --timeout 120

  testing-guardian:
    runs-on: ubuntu-latest
    needs: pytester
    if: always()
    steps:
      - run: echo "${{ needs.pytester.result }}"
      - name: failing...
        if: needs.pytester.result == 'failure'
        run: exit 1
      - name: cancelled or skipped...
        if: contains(fromJSON('["cancelled", "skipped"]'), needs.pytester.result)
        timeout-minutes: 1
        run: sleep 90
