trigger:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

image: "pytorchlightning/lightning-thunder:ubuntu24.04-cuda12.6.3-cudnn-fe1.10.0-py3.10-pt_2.7.1-dev"
machine: "L4_X_2"
interruptible: "true"
timeout: "45" # minutes
parametrize:
  matrix:
    dependency: ["", "compiler"]
  include: []
  exclude: []

env:
  SKIP_WITH_CI: "1" # skip single tests with CI
  NCCL_DEBUG: "INFO"
  NCCL_IGNORE_DISABLED_P2P: "1"
  TORCH_VERSION: "2.7.1"
  RUN_ONLY_CUDA_TESTS: "1" # run CUDA tests only

run: |
  whereis nvidia
  nvidia-smi
  python --version
  pip --version
  pip list
  set -ex

  pip install -q '.[extra,test]' "torch==${TORCH_VERSION}" cffi -U

  if [ "${dependency}" == "compiler" ]; then
    pip uninstall -y torchvision torchaudio
    pip install -q '.[compiler,extra,test]' "torch==${TORCH_VERSION}"
    python -c "from thunder.executors import nvfuser_available ; assert nvfuser_available(), 'nvFuser is missing!'"
    python -c "from thunder.executors.triton_utils import triton_version ; assert triton_version() is not None, 'triton is missing!'"
  fi

  pip list
  python -c "import torch ; gpus = torch.cuda.device_count() ; assert gpus >= 2, f'GPU: {gpus}'"
  python -c "from torch import __version__ as ver ; assert str(ver).split('+')[0] == '$TORCH_VERSION', f'PyTorch: installed {ver} but expected $TORCH_VERSION'"

  pytest -v --durations=100

  wget https://raw.githubusercontent.com/Lightning-AI/utilities/main/scripts/run_standalone_tests.sh
  PL_RUN_STANDALONE_TESTS=1 bash run_standalone_tests.sh "tests"

  if [ "${dependency}" == "compiler" ]; then
    pip uninstall -y lightning-thunder
    # install thunder from source, so that, thunder.tests will be available
    pip install -U "lightning-thunder[test] @ git+https://github.com/Lightning-AI/lightning-thunder.git" "torch==${TORCH_VERSION}"
    # without env var, it filters out all tests
    RUN_ONLY_CUDA_TESTS=0 pytest tests/ext_thunder/test_thunder_networks.py -v
  fi
